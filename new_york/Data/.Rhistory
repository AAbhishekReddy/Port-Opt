setwd("/home/ghost/Desktop/Port-Opt/new_york")
old_sr = function(x) {
return (mean(old_portfolio_returns(x))/sqrt(var(old_portfolio_returns(x))))
}
old_obj  = function(x) {
return (-old_sr(x)+100*penalty(x))
}
old_penalty = function(x) {
penalties = (sum(x)-1)*(sum(x)-1)
for (i in 1:length(x)) {
penalties = penalties +  max(c(0,x[i]-1))*max(c(0,x[i]-1)) +  max(c(0,-x[i]))*max(c(0,-x[i]))
}
return (penalties)
}
old_portfolio_returns = function(x) {
port.returns = 0
for (i in 1:length(x)) {
port.returns = port.returns + profit_old[,i] * x[i]
}
return (port.returns)
}
csv_files = c("a.csv","aal.csv","aap.csv","aapl.csv","abc.csv","abt.csv")
merged_file = NULL
n = length(csv_files)
for (i in 1:n) {
csv = read.csv(csv_files[i])
csv = csv[,c("date","close")]
names(csv) = c("date",csv_files[i])
if (i == 1) merged_file = csv
else merged_file = merge(merged_file,csv)
}
write.csv(merged_file, file = "merged-file-old.csv")
n = ncol(merged_file)
for (i in 2:n) {
stock_prices = merged_file[,i]
stock_prices_prev = c(NA,stock_prices[1:(length(stock_prices)-1)])
returns = (stock_prices-stock_prices_prev)/stock_prices_prev
merged_file[,i] = returns
}
profit_old = merged_file[2:nrow(merged_file),2:ncol(merged_file)]
setwd("/home/ghost/Desktop/Port-Opt/new_york/Data")
csv_files = c("a.csv","aal.csv","aap.csv","aapl.csv","abc.csv","abt.csv")
merged_file = NULL
n = length(csv_files)
for (i in 1:n) {
csv = read.csv(csv_files[i])
csv = csv[,c("date","close")]
names(csv) = c("date",csv_files[i])
if (i == 1) merged_file = csv
else merged_file = merge(merged_file,csv)
}
write.csv(merged_file, file = "merged-file-old.csv")
n = ncol(merged_file)
for (i in 2:n) {
stock_prices = merged_file[,i]
stock_prices_prev = c(NA,stock_prices[1:(length(stock_prices)-1)])
returns = (stock_prices-stock_prices_prev)/stock_prices_prev
merged_file[,i] = returns
}
profit_old = merged_file[2:nrow(merged_file),2:ncol(merged_file)]
old_ga = ga(
type="real-valued",
function(x){-old_obj(x)},
lower = rep(0,ncol(profit_old)),
upper = rep(1,ncol(profit_old)),
maxiter = 1000,
run=100,
monitor=TRUE,
seed=1
)
library(GA)
library(ggplot2)
old_ga = ga(
type="real-valued",
function(x){-old_obj(x)},
lower = rep(0,ncol(profit_old)),
upper = rep(1,ncol(profit_old)),
maxiter = 1000,
run=100,
monitor=TRUE,
seed=1
)
old_ga = ga(
type="real-valued",
function(x){-old_obj(x)},
lower = rep(0,ncol(profit_old)),
upper = rep(1,ncol(profit_old)),
maxiter = 1000,
run=100,
monitor=TRUE,
seed=1
)
old_ga = ga(
type="real-valued",
function(x){-old_obj(x)},
lower = rep(0,ncol(profit_old)),
upper = rep(1,ncol(profit_old)),
maxiter = 1000,
run=100,
monitor=TRUE,
seed=1
)
old_ga = ga(
type="real-valued",
function(x){-old_obj(x)},
lower = rep(0,ncol(profit_old)),
upper = rep(1,ncol(profit_old)),
maxiter = 1000,
run=100,
monitor=TRUE,
seed=1
)
old_sr = function(x) {
return (mean(old_portfolio_returns(x))/sqrt(var(old_portfolio_returns(x))))
}
old_obj  = function(x) {
return (-old_sr(x)+100*penalty(x))
}
penalty = function(x) {
penalties = (sum(x)-1)*(sum(x)-1)
for (i in 1:length(x)) {
penalties = penalties +  max(c(0,x[i]-1))*max(c(0,x[i]-1)) +  max(c(0,-x[i]))*max(c(0,-x[i]))
}
return (penalties)
}
old_portfolio_returns = function(x) {
port.returns = 0
for (i in 1:length(x)) {
port.returns = port.returns + profit_old[,i] * x[i]
}
return (port.returns)
}
old_ga = ga(
type="real-valued",
function(x){-old_obj(x)},
lower = rep(0,ncol(profit_old)),
upper = rep(1,ncol(profit_old)),
maxiter = 1000,
run=100,
monitor=TRUE,
seed=1
)
summary(old_ga)
old_sol = as.vector(summary(old_ga)$old_solution)
cbind(names(profit_old),old_sol)
results = old_portfolio_returns(old_sol)
old_sol = as.vector(summary(old_ga)$old_solution)
cbind(names(profit_old),old_sol)
piepercent<- round(100*old_sol/sum(old_sol), 1)
companies = c("A", "AAL", "AAP", "AAPL", "ABC", "ABT")
pie(old_sol, labels = piepercent, col = rainbow(length(old_sol)), main = "Asset Allocation")
summary(old_ga)
old_sol = as.vector(summary(old_ga)$solution)
cbind(names(profit_old),old_sol)
results = old_portfolio_returns(old_sol)
nd(100*old_sol/sum(old_sol), 1)
companies = c("A", "AAL", "AAP", "AAPL", "ABC", "ABT")
pie(old_sol, label
piepercent<- round(100*old_sol/sum(old_sol), 1)
companies = c("A", "AAL", "AAP", "AAPL", "ABC", "ABT")
pie(old_sol, labels = piepercent, col = rainbow(length(old_sol)), main = "Asset Allocation")
legend("topright", companies, cex = 0.8, fill = rainbow(length(old_sol)))
piepercent<- round(100*old_sol/sum(old_sol), 1)
pie(old_sol, labels = piepercent, col = rainbow(length(old_sol)), main = "Asset Allocation")
piepercent<- round(100*new_sol/sum(new_sol), 1)
companies = c("A", "AAL", "AAP", "AAPL", "ABC", "ABT")
pie(new_sol, labels = piepercent, col = rainbow(length(new_sol)), main = "Asset Allocation")
legend("topright", companies, cex = 0.8, fill = rainbow(length(new_sol)))
sharpe_ratio = function(x) {
return (mean(portfolio_returns(x))/sqrt(var(portfolio_returns(x))))
}
obj  = function(x) {
return (-sharpe_ratio(x)+100*penalty(x))
}
penalty = function(x) {
penalties = (sum(x)-1)*(sum(x)-1)
for (i in 1:length(x)) {
penalties = penalties +  max(c(0,x[i]-1))*max(c(0,x[i]-1)) +  max(c(0,-x[i]))*max(c(0,-x[i]))
}
return (penalties)
}
portfolio_returns = function(x) {
port.returns = 0
for (i in 1:length(x)) {
port.returns = port.returns + profit[,i] * x[i] - profit[,7]
}
# print(length(port.returns))
return (port.returns)
}
profit <- read.csv("profit.csv")
profit = profit[-c(1)]
new_ga = ga(
type="real-valued",
function(x){-obj(x)},
lower = rep(0,ncol(profit) - 1),
upper = rep(1,ncol(profit) - 1),
pcrossover = 0.8,
pmutation = 0.1,
updatePop = FALSE,
postFitness = NULL,
maxiter = 10000,
run = 100,
maxFitness = Inf,
names = NULL,
suggestions = NULL,
optim = TRUE,
optimArgs = list(method = "Nelder-Mead",
poptim = 0.05,
pressel = 0.5,
control = list(fnscale = -1, maxit = 1000)),
keepBest = FALSE,
parallel = TRUE,
monitor = if(interactive()) gaMonitor else FALSE,
seed = NULL)
new_sol = as.vector(summary(new_ga)$solution)
pp = profit[-c(6)]
cbind(names(pp),new_sol)
results = portfolio_returns(new_sol)
piepercent<- round(100*new_sol/sum(new_sol), 1)
companies = c("A", "AAL", "AAP", "AAPL", "ABC", "ABT")
pie(new_sol, labels = piepercent, col = rainbow(length(new_sol)), main = "Asset Allocation")
legend("topright", companies, cex = 0.8, fill = rainbow(length(new_sol)))
new_sol = new_sol + 1
pp = profit[-c(6)]
cbind(names(pp),new_sol)
results = portfolio_returns(new_sol)
piepercent<- round(100*new_sol/sum(new_sol), 1)
companies = c("A", "AAL", "AAP", "AAPL", "ABC", "ABT")
pie(new_sol, labels = piepercent, col = rainbow(length(new_sol)), main = "Asset Allocation")
legend("topright", companies, cex = 0.8, fill = rainbow(length(new_sol)))
jpeg("modified - alloc.jpeg", width = 1100, height = 700)
piepercent<- round(100*new_sol/sum(new_sol), 1)
companies = c("A", "AAL", "AAP", "AAPL", "ABC", "ABT")
pie(new_sol, labels = piepercent, col = rainbow(length(new_sol)), main = "Asset Allocation")
legend("topright", companies, cex = 0.8, fill = rainbow(length(new_sol)))
dev.off()
new_ga = ga(
type="real-valued",
function(x){-obj(x)},
lower = rep(0,ncol(profit) - 1),
upper = rep(1,ncol(profit) - 1),
pcrossover = 0.8,
pmutation = 0.1,
updatePop = FALSE,
postFitness = NULL,
maxiter = 10000,
run = 100,
maxFitness = Inf,
names = NULL,
suggestions = NULL,
optim = TRUE,
optimArgs = list(method = "BFGS",
poptim = 0.05,
pressel = 0.5,
control = list(fnscale = -1, maxit = 1000)),
keepBest = FALSE,
parallel = TRUE,
monitor = if(interactive()) gaMonitor else FALSE,
seed = NULL)
# summary(new_ga)
new_sol = as.vector(summary(new_ga)$solution)
new_sol
new_ga = ga(
type="real-valued",
function(x){-obj(x)},
lower = rep(0,ncol(pp)),
upper = rep(1,ncol(pp)),
pcrossover = 0.8,
pmutation = 0.1,
updatePop = FALSE,
postFitness = NULL,
maxiter = 10000,
run = 100,
maxFitness = Inf,
names = NULL,
suggestions = NULL,
optim = TRUE,
optimArgs = list(method = "BFGS",
poptim = 0.05,
pressel = 0.5,
control = list(fnscale = -1, maxit = 1000)),
keepBest = FALSE,
parallel = TRUE,
monitor = if(interactive()) gaMonitor else FALSE,
seed = NULL)
# summary(new_ga)
new_sol = as.vector(summary(new_ga)$solution)
new_sol
# new_sol = new_sol + 1
cbind(names(pp),new_sol)
pp
View(pp)
View(pp)
f
profit <- read.csv("profit.csv")
profit = profit[-c(1)]
new_ga = ga(
type="real-valued",
function(x){-obj(x)},
lower = rep(0,ncol(pp)),
upper = rep(1,ncol(pp)),
pcrossover = 0.8,
pmutation = 0.1,
updatePop = FALSE,
postFitness = NULL,
maxiter = 10000,
run = 100,
maxFitness = Inf,
names = NULL,
suggestions = NULL,
optim = TRUE,
optimArgs = list(method = "BFGS",
poptim = 0.05,
pressel = 0.5,
control = list(fnscale = -1, maxit = 1000)),
keepBest = FALSE,
parallel = TRUE,
monitor = if(interactive()) gaMonitor else FALSE,
seed = NULL)
# summary(new_ga)
new_sol = as.vector(summary(new_ga)$solution)
# new_sol = new_sol + 1
cbind(names(pp),new_sol)
profit <- read.csv("profit.csv")
source('~/Desktop/Port-Opt/scripts/main.R', echo=TRUE)
profit = profit[-c(1)]
# Droping the risk free rate
pp = profit[-c(7)]
new_ga = ga(
type="real-valued",
function(x){-obj(x)},
lower = rep(0,ncol(pp)),
upper = rep(1,ncol(pp)),
pcrossover = 0.8,
pmutation = 0.1,
updatePop = FALSE,
postFitness = NULL,
maxiter = 10000,
run = 100,
maxFitness = Inf,
names = NULL,
suggestions = NULL,
optim = TRUE,
optimArgs = list(method = "BFGS",
poptim = 0.05,
pressel = 0.5,
control = list(fnscale = -1, maxit = 1000)),
keepBest = FALSE,
parallel = TRUE,
monitor = if(interactive()) gaMonitor else FALSE,
seed = NULL)
View(profit_old)
View(profit)
f
profit <- read.csv("profit.csv")
View(profit)
profit <- read.csv("profit.csv")
profit = profit[-c(1)]
# Droping the risk free rate
pp = profit[-c(7)]
# Droping the risk free rate
pp = profit[-c(7)]
View(pp)
new_ga = ga(
type="real-valued",
function(x){-obj(x)},
lower = rep(0,ncol(pp)),
upper = rep(1,ncol(pp)),
pcrossover = 0.8,
pmutation = 0.1,
updatePop = FALSE,
postFitness = NULL,
maxiter = 10000,
run = 100,
maxFitness = Inf,
names = NULL,
suggestions = NULL,
optim = TRUE,
optimArgs = list(method = "BFGS",
poptim = 0.05,
pressel = 0.5,
control = list(fnscale = -1, maxit = 1000)),
keepBest = FALSE,
parallel = TRUE,
monitor = if(interactive()) gaMonitor else FALSE,
seed = NULL)
# summary(new_ga)
new_sol = as.vector(summary(new_ga)$solution)
# new_sol = new_sol + 1
cbind(names(pp),new_sol)
results = portfolio_returns(new_sol)
piepercent<- round(100*new_sol/sum(new_sol), 1)
pie(new_sol, labels = piepercent, col = rainbow(length(new_sol)), main = "Asset Allocation")
legend("topright", companies, cex = 0.8, fill = rainbow(length(new_sol)))
new_sol
sum(new_sol)
ga_res = ga(
type="real-valued",
function(x){-obj(x)},
lower = rep(0,ncol(profit) - 1),
upper = rep(1,ncol(profit) - 1),
maxiter = 1000,
run=100,
monitor=TRUE,
seed=1
)
